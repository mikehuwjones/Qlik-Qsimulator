/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.mastercard.fcspr.types;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Transaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -498988786204956574L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transaction\",\"namespace\":\"com.mastercard.fcspr.types\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"TimeSent\",\"type\":\"long\",\"default\":-1},{\"name\":\"TimeMessageSent\",\"type\":\"long\",\"default\":-1},{\"name\":\"Time\",\"type\":\"long\"},{\"name\":\"TimeSwitchReceived\",\"type\":\"long\",\"default\":-1},{\"name\":\"TimeSwitchSent\",\"type\":\"long\",\"default\":-1},{\"name\":\"TimeConfirmationReceived\",\"type\":\"long\",\"default\":-1},{\"name\":\"TimeConfirmationSent\",\"type\":\"long\",\"default\":-1},{\"name\":\"Source\",\"type\":{\"type\":\"record\",\"name\":\"Source\",\"namespace\":\"com.mastercard.fcspr.types.Source\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"OwningBank\",\"type\":\"string\"},{\"name\":\"OwningBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"SettlingBank\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"SettlingBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"HandlingBank\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"HandlingBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"ActingFor\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Overseas\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Type\",\"type\":\"string\",\"default\":\"\"}]},\"namespace\":\"com.mastercard.fcspr.types.Source\"},{\"name\":\"Dest\",\"type\":{\"type\":\"record\",\"name\":\"Dest\",\"namespace\":\"com.mastercard.fcspr.types.Dest\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"OwningBank\",\"type\":\"string\"},{\"name\":\"OwningBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"SettlingBank\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"SettlingBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"HandlingBank\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"HandlingBankName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"ActingFor\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Overseas\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Type\",\"type\":\"string\",\"default\":\"\"}]},\"namespace\":\"com.mastercard.fcspr.types.Dest\"},{\"name\":\"SourceDevice\",\"type\":{\"type\":\"record\",\"name\":\"SourceDevice\",\"namespace\":\"com.mastercard.fcspr.types.SourceDevice\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"IpAddress\",\"type\":\"string\",\"default\":\"\"}]},\"default\":{},\"namespace\":\"com.mastercard.fcspr.types.SourceDevice\"},{\"name\":\"Type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Value\",\"type\":\"long\"},{\"name\":\"Ref\",\"type\":\"string\"},{\"name\":\"Currency\",\"type\":\"string\"},{\"name\":\"Service\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Success\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Redirection\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Category\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"E2eRef\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"SourceBatchID\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"DestinationBatchID\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Auth\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ThirdParty\",\"type\":\"boolean\",\"default\":false},{\"name\":\"Settlement\",\"type\":{\"type\":\"record\",\"name\":\"Settlement\",\"namespace\":\"com.mastercard.fcspr.types.Settlement\",\"fields\":[{\"name\":\"Time\",\"type\":\"long\",\"default\":-1},{\"name\":\"Cycle\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Date\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"Priority\",\"type\":\"string\",\"default\":\"\"}]},\"default\":{},\"namespace\":\"com.mastercard.fcspr.types.Settlement\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence Id;
  @Deprecated public long TimeSent;
  @Deprecated public long TimeMessageSent;
  @Deprecated public long Time;
  @Deprecated public long TimeSwitchReceived;
  @Deprecated public long TimeSwitchSent;
  @Deprecated public long TimeConfirmationReceived;
  @Deprecated public long TimeConfirmationSent;
  @Deprecated public com.mastercard.fcspr.types.Source.Source Source;
  @Deprecated public com.mastercard.fcspr.types.Dest.Dest Dest;
  @Deprecated public com.mastercard.fcspr.types.SourceDevice.SourceDevice SourceDevice;
  @Deprecated public java.lang.CharSequence Type;
  @Deprecated public long Value;
  @Deprecated public java.lang.CharSequence Ref;
  @Deprecated public java.lang.CharSequence Currency;
  @Deprecated public java.lang.CharSequence Service;
  @Deprecated public boolean Success;
  @Deprecated public boolean Redirection;
  @Deprecated public java.lang.CharSequence Category;
  @Deprecated public java.lang.CharSequence E2eRef;
  @Deprecated public java.lang.CharSequence SourceBatchID;
  @Deprecated public java.lang.CharSequence DestinationBatchID;
  @Deprecated public java.lang.CharSequence Auth;
  @Deprecated public boolean ThirdParty;
  @Deprecated public com.mastercard.fcspr.types.Settlement.Settlement Settlement;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Transaction() {}

  /**
   * All-args constructor.
   * @param Id The new value for Id
   * @param TimeSent The new value for TimeSent
   * @param TimeMessageSent The new value for TimeMessageSent
   * @param Time The new value for Time
   * @param TimeSwitchReceived The new value for TimeSwitchReceived
   * @param TimeSwitchSent The new value for TimeSwitchSent
   * @param TimeConfirmationReceived The new value for TimeConfirmationReceived
   * @param TimeConfirmationSent The new value for TimeConfirmationSent
   * @param Source The new value for Source
   * @param Dest The new value for Dest
   * @param SourceDevice The new value for SourceDevice
   * @param Type The new value for Type
   * @param Value The new value for Value
   * @param Ref The new value for Ref
   * @param Currency The new value for Currency
   * @param Service The new value for Service
   * @param Success The new value for Success
   * @param Redirection The new value for Redirection
   * @param Category The new value for Category
   * @param E2eRef The new value for E2eRef
   * @param SourceBatchID The new value for SourceBatchID
   * @param DestinationBatchID The new value for DestinationBatchID
   * @param Auth The new value for Auth
   * @param ThirdParty The new value for ThirdParty
   * @param Settlement The new value for Settlement
   */
  public Transaction(java.lang.CharSequence Id, java.lang.Long TimeSent, java.lang.Long TimeMessageSent, java.lang.Long Time, java.lang.Long TimeSwitchReceived, java.lang.Long TimeSwitchSent, java.lang.Long TimeConfirmationReceived, java.lang.Long TimeConfirmationSent, com.mastercard.fcspr.types.Source.Source Source, com.mastercard.fcspr.types.Dest.Dest Dest, com.mastercard.fcspr.types.SourceDevice.SourceDevice SourceDevice, java.lang.CharSequence Type, java.lang.Long Value, java.lang.CharSequence Ref, java.lang.CharSequence Currency, java.lang.CharSequence Service, java.lang.Boolean Success, java.lang.Boolean Redirection, java.lang.CharSequence Category, java.lang.CharSequence E2eRef, java.lang.CharSequence SourceBatchID, java.lang.CharSequence DestinationBatchID, java.lang.CharSequence Auth, java.lang.Boolean ThirdParty, com.mastercard.fcspr.types.Settlement.Settlement Settlement) {
    this.Id = Id;
    this.TimeSent = TimeSent;
    this.TimeMessageSent = TimeMessageSent;
    this.Time = Time;
    this.TimeSwitchReceived = TimeSwitchReceived;
    this.TimeSwitchSent = TimeSwitchSent;
    this.TimeConfirmationReceived = TimeConfirmationReceived;
    this.TimeConfirmationSent = TimeConfirmationSent;
    this.Source = Source;
    this.Dest = Dest;
    this.SourceDevice = SourceDevice;
    this.Type = Type;
    this.Value = Value;
    this.Ref = Ref;
    this.Currency = Currency;
    this.Service = Service;
    this.Success = Success;
    this.Redirection = Redirection;
    this.Category = Category;
    this.E2eRef = E2eRef;
    this.SourceBatchID = SourceBatchID;
    this.DestinationBatchID = DestinationBatchID;
    this.Auth = Auth;
    this.ThirdParty = ThirdParty;
    this.Settlement = Settlement;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Id;
    case 1: return TimeSent;
    case 2: return TimeMessageSent;
    case 3: return Time;
    case 4: return TimeSwitchReceived;
    case 5: return TimeSwitchSent;
    case 6: return TimeConfirmationReceived;
    case 7: return TimeConfirmationSent;
    case 8: return Source;
    case 9: return Dest;
    case 10: return SourceDevice;
    case 11: return Type;
    case 12: return Value;
    case 13: return Ref;
    case 14: return Currency;
    case 15: return Service;
    case 16: return Success;
    case 17: return Redirection;
    case 18: return Category;
    case 19: return E2eRef;
    case 20: return SourceBatchID;
    case 21: return DestinationBatchID;
    case 22: return Auth;
    case 23: return ThirdParty;
    case 24: return Settlement;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Id = (java.lang.CharSequence)value$; break;
    case 1: TimeSent = (java.lang.Long)value$; break;
    case 2: TimeMessageSent = (java.lang.Long)value$; break;
    case 3: Time = (java.lang.Long)value$; break;
    case 4: TimeSwitchReceived = (java.lang.Long)value$; break;
    case 5: TimeSwitchSent = (java.lang.Long)value$; break;
    case 6: TimeConfirmationReceived = (java.lang.Long)value$; break;
    case 7: TimeConfirmationSent = (java.lang.Long)value$; break;
    case 8: Source = (com.mastercard.fcspr.types.Source.Source)value$; break;
    case 9: Dest = (com.mastercard.fcspr.types.Dest.Dest)value$; break;
    case 10: SourceDevice = (com.mastercard.fcspr.types.SourceDevice.SourceDevice)value$; break;
    case 11: Type = (java.lang.CharSequence)value$; break;
    case 12: Value = (java.lang.Long)value$; break;
    case 13: Ref = (java.lang.CharSequence)value$; break;
    case 14: Currency = (java.lang.CharSequence)value$; break;
    case 15: Service = (java.lang.CharSequence)value$; break;
    case 16: Success = (java.lang.Boolean)value$; break;
    case 17: Redirection = (java.lang.Boolean)value$; break;
    case 18: Category = (java.lang.CharSequence)value$; break;
    case 19: E2eRef = (java.lang.CharSequence)value$; break;
    case 20: SourceBatchID = (java.lang.CharSequence)value$; break;
    case 21: DestinationBatchID = (java.lang.CharSequence)value$; break;
    case 22: Auth = (java.lang.CharSequence)value$; break;
    case 23: ThirdParty = (java.lang.Boolean)value$; break;
    case 24: Settlement = (com.mastercard.fcspr.types.Settlement.Settlement)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Id' field.
   * @return The value of the 'Id' field.
   */
  public java.lang.CharSequence getId() {
    return Id;
  }

  /**
   * Sets the value of the 'Id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.Id = value;
  }

  /**
   * Gets the value of the 'TimeSent' field.
   * @return The value of the 'TimeSent' field.
   */
  public java.lang.Long getTimeSent() {
    return TimeSent;
  }

  /**
   * Sets the value of the 'TimeSent' field.
   * @param value the value to set.
   */
  public void setTimeSent(java.lang.Long value) {
    this.TimeSent = value;
  }

  /**
   * Gets the value of the 'TimeMessageSent' field.
   * @return The value of the 'TimeMessageSent' field.
   */
  public java.lang.Long getTimeMessageSent() {
    return TimeMessageSent;
  }

  /**
   * Sets the value of the 'TimeMessageSent' field.
   * @param value the value to set.
   */
  public void setTimeMessageSent(java.lang.Long value) {
    this.TimeMessageSent = value;
  }

  /**
   * Gets the value of the 'Time' field.
   * @return The value of the 'Time' field.
   */
  public java.lang.Long getTime() {
    return Time;
  }

  /**
   * Sets the value of the 'Time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.Time = value;
  }

  /**
   * Gets the value of the 'TimeSwitchReceived' field.
   * @return The value of the 'TimeSwitchReceived' field.
   */
  public java.lang.Long getTimeSwitchReceived() {
    return TimeSwitchReceived;
  }

  /**
   * Sets the value of the 'TimeSwitchReceived' field.
   * @param value the value to set.
   */
  public void setTimeSwitchReceived(java.lang.Long value) {
    this.TimeSwitchReceived = value;
  }

  /**
   * Gets the value of the 'TimeSwitchSent' field.
   * @return The value of the 'TimeSwitchSent' field.
   */
  public java.lang.Long getTimeSwitchSent() {
    return TimeSwitchSent;
  }

  /**
   * Sets the value of the 'TimeSwitchSent' field.
   * @param value the value to set.
   */
  public void setTimeSwitchSent(java.lang.Long value) {
    this.TimeSwitchSent = value;
  }

  /**
   * Gets the value of the 'TimeConfirmationReceived' field.
   * @return The value of the 'TimeConfirmationReceived' field.
   */
  public java.lang.Long getTimeConfirmationReceived() {
    return TimeConfirmationReceived;
  }

  /**
   * Sets the value of the 'TimeConfirmationReceived' field.
   * @param value the value to set.
   */
  public void setTimeConfirmationReceived(java.lang.Long value) {
    this.TimeConfirmationReceived = value;
  }

  /**
   * Gets the value of the 'TimeConfirmationSent' field.
   * @return The value of the 'TimeConfirmationSent' field.
   */
  public java.lang.Long getTimeConfirmationSent() {
    return TimeConfirmationSent;
  }

  /**
   * Sets the value of the 'TimeConfirmationSent' field.
   * @param value the value to set.
   */
  public void setTimeConfirmationSent(java.lang.Long value) {
    this.TimeConfirmationSent = value;
  }

  /**
   * Gets the value of the 'Source' field.
   * @return The value of the 'Source' field.
   */
  public com.mastercard.fcspr.types.Source.Source getSource() {
    return Source;
  }

  /**
   * Sets the value of the 'Source' field.
   * @param value the value to set.
   */
  public void setSource(com.mastercard.fcspr.types.Source.Source value) {
    this.Source = value;
  }

  /**
   * Gets the value of the 'Dest' field.
   * @return The value of the 'Dest' field.
   */
  public com.mastercard.fcspr.types.Dest.Dest getDest() {
    return Dest;
  }

  /**
   * Sets the value of the 'Dest' field.
   * @param value the value to set.
   */
  public void setDest(com.mastercard.fcspr.types.Dest.Dest value) {
    this.Dest = value;
  }

  /**
   * Gets the value of the 'SourceDevice' field.
   * @return The value of the 'SourceDevice' field.
   */
  public com.mastercard.fcspr.types.SourceDevice.SourceDevice getSourceDevice() {
    return SourceDevice;
  }

  /**
   * Sets the value of the 'SourceDevice' field.
   * @param value the value to set.
   */
  public void setSourceDevice(com.mastercard.fcspr.types.SourceDevice.SourceDevice value) {
    this.SourceDevice = value;
  }

  /**
   * Gets the value of the 'Type' field.
   * @return The value of the 'Type' field.
   */
  public java.lang.CharSequence getType() {
    return Type;
  }

  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'Value' field.
   * @return The value of the 'Value' field.
   */
  public java.lang.Long getValue() {
    return Value;
  }

  /**
   * Sets the value of the 'Value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Long value) {
    this.Value = value;
  }

  /**
   * Gets the value of the 'Ref' field.
   * @return The value of the 'Ref' field.
   */
  public java.lang.CharSequence getRef() {
    return Ref;
  }

  /**
   * Sets the value of the 'Ref' field.
   * @param value the value to set.
   */
  public void setRef(java.lang.CharSequence value) {
    this.Ref = value;
  }

  /**
   * Gets the value of the 'Currency' field.
   * @return The value of the 'Currency' field.
   */
  public java.lang.CharSequence getCurrency() {
    return Currency;
  }

  /**
   * Sets the value of the 'Currency' field.
   * @param value the value to set.
   */
  public void setCurrency(java.lang.CharSequence value) {
    this.Currency = value;
  }

  /**
   * Gets the value of the 'Service' field.
   * @return The value of the 'Service' field.
   */
  public java.lang.CharSequence getService() {
    return Service;
  }

  /**
   * Sets the value of the 'Service' field.
   * @param value the value to set.
   */
  public void setService(java.lang.CharSequence value) {
    this.Service = value;
  }

  /**
   * Gets the value of the 'Success' field.
   * @return The value of the 'Success' field.
   */
  public java.lang.Boolean getSuccess() {
    return Success;
  }

  /**
   * Sets the value of the 'Success' field.
   * @param value the value to set.
   */
  public void setSuccess(java.lang.Boolean value) {
    this.Success = value;
  }

  /**
   * Gets the value of the 'Redirection' field.
   * @return The value of the 'Redirection' field.
   */
  public java.lang.Boolean getRedirection() {
    return Redirection;
  }

  /**
   * Sets the value of the 'Redirection' field.
   * @param value the value to set.
   */
  public void setRedirection(java.lang.Boolean value) {
    this.Redirection = value;
  }

  /**
   * Gets the value of the 'Category' field.
   * @return The value of the 'Category' field.
   */
  public java.lang.CharSequence getCategory() {
    return Category;
  }

  /**
   * Sets the value of the 'Category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.Category = value;
  }

  /**
   * Gets the value of the 'E2eRef' field.
   * @return The value of the 'E2eRef' field.
   */
  public java.lang.CharSequence getE2eRef() {
    return E2eRef;
  }

  /**
   * Sets the value of the 'E2eRef' field.
   * @param value the value to set.
   */
  public void setE2eRef(java.lang.CharSequence value) {
    this.E2eRef = value;
  }

  /**
   * Gets the value of the 'SourceBatchID' field.
   * @return The value of the 'SourceBatchID' field.
   */
  public java.lang.CharSequence getSourceBatchID() {
    return SourceBatchID;
  }

  /**
   * Sets the value of the 'SourceBatchID' field.
   * @param value the value to set.
   */
  public void setSourceBatchID(java.lang.CharSequence value) {
    this.SourceBatchID = value;
  }

  /**
   * Gets the value of the 'DestinationBatchID' field.
   * @return The value of the 'DestinationBatchID' field.
   */
  public java.lang.CharSequence getDestinationBatchID() {
    return DestinationBatchID;
  }

  /**
   * Sets the value of the 'DestinationBatchID' field.
   * @param value the value to set.
   */
  public void setDestinationBatchID(java.lang.CharSequence value) {
    this.DestinationBatchID = value;
  }

  /**
   * Gets the value of the 'Auth' field.
   * @return The value of the 'Auth' field.
   */
  public java.lang.CharSequence getAuth() {
    return Auth;
  }

  /**
   * Sets the value of the 'Auth' field.
   * @param value the value to set.
   */
  public void setAuth(java.lang.CharSequence value) {
    this.Auth = value;
  }

  /**
   * Gets the value of the 'ThirdParty' field.
   * @return The value of the 'ThirdParty' field.
   */
  public java.lang.Boolean getThirdParty() {
    return ThirdParty;
  }

  /**
   * Sets the value of the 'ThirdParty' field.
   * @param value the value to set.
   */
  public void setThirdParty(java.lang.Boolean value) {
    this.ThirdParty = value;
  }

  /**
   * Gets the value of the 'Settlement' field.
   * @return The value of the 'Settlement' field.
   */
  public com.mastercard.fcspr.types.Settlement.Settlement getSettlement() {
    return Settlement;
  }

  /**
   * Sets the value of the 'Settlement' field.
   * @param value the value to set.
   */
  public void setSettlement(com.mastercard.fcspr.types.Settlement.Settlement value) {
    this.Settlement = value;
  }

  /**
   * Creates a new Transaction RecordBuilder.
   * @return A new Transaction RecordBuilder
   */
  public static com.mastercard.fcspr.types.Transaction.Builder newBuilder() {
    return new com.mastercard.fcspr.types.Transaction.Builder();
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Transaction RecordBuilder
   */
  public static com.mastercard.fcspr.types.Transaction.Builder newBuilder(com.mastercard.fcspr.types.Transaction.Builder other) {
    return new com.mastercard.fcspr.types.Transaction.Builder(other);
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Transaction instance.
   * @param other The existing instance to copy.
   * @return A new Transaction RecordBuilder
   */
  public static com.mastercard.fcspr.types.Transaction.Builder newBuilder(com.mastercard.fcspr.types.Transaction other) {
    return new com.mastercard.fcspr.types.Transaction.Builder(other);
  }

  /**
   * RecordBuilder for Transaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transaction>
    implements org.apache.avro.data.RecordBuilder<Transaction> {

    private java.lang.CharSequence Id;
    private long TimeSent;
    private long TimeMessageSent;
    private long Time;
    private long TimeSwitchReceived;
    private long TimeSwitchSent;
    private long TimeConfirmationReceived;
    private long TimeConfirmationSent;
    private com.mastercard.fcspr.types.Source.Source Source;
    private com.mastercard.fcspr.types.Source.Source.Builder SourceBuilder;
    private com.mastercard.fcspr.types.Dest.Dest Dest;
    private com.mastercard.fcspr.types.Dest.Dest.Builder DestBuilder;
    private com.mastercard.fcspr.types.SourceDevice.SourceDevice SourceDevice;
    private com.mastercard.fcspr.types.SourceDevice.SourceDevice.Builder SourceDeviceBuilder;
    private java.lang.CharSequence Type;
    private long Value;
    private java.lang.CharSequence Ref;
    private java.lang.CharSequence Currency;
    private java.lang.CharSequence Service;
    private boolean Success;
    private boolean Redirection;
    private java.lang.CharSequence Category;
    private java.lang.CharSequence E2eRef;
    private java.lang.CharSequence SourceBatchID;
    private java.lang.CharSequence DestinationBatchID;
    private java.lang.CharSequence Auth;
    private boolean ThirdParty;
    private com.mastercard.fcspr.types.Settlement.Settlement Settlement;
    private com.mastercard.fcspr.types.Settlement.Settlement.Builder SettlementBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.mastercard.fcspr.types.Transaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.TimeSent)) {
        this.TimeSent = data().deepCopy(fields()[1].schema(), other.TimeSent);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.TimeMessageSent)) {
        this.TimeMessageSent = data().deepCopy(fields()[2].schema(), other.TimeMessageSent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.TimeSwitchReceived)) {
        this.TimeSwitchReceived = data().deepCopy(fields()[4].schema(), other.TimeSwitchReceived);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.TimeSwitchSent)) {
        this.TimeSwitchSent = data().deepCopy(fields()[5].schema(), other.TimeSwitchSent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.TimeConfirmationReceived)) {
        this.TimeConfirmationReceived = data().deepCopy(fields()[6].schema(), other.TimeConfirmationReceived);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.TimeConfirmationSent)) {
        this.TimeConfirmationSent = data().deepCopy(fields()[7].schema(), other.TimeConfirmationSent);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Source)) {
        this.Source = data().deepCopy(fields()[8].schema(), other.Source);
        fieldSetFlags()[8] = true;
      }
      if (other.hasSourceBuilder()) {
        this.SourceBuilder = com.mastercard.fcspr.types.Source.Source.newBuilder(other.getSourceBuilder());
      }
      if (isValidValue(fields()[9], other.Dest)) {
        this.Dest = data().deepCopy(fields()[9].schema(), other.Dest);
        fieldSetFlags()[9] = true;
      }
      if (other.hasDestBuilder()) {
        this.DestBuilder = com.mastercard.fcspr.types.Dest.Dest.newBuilder(other.getDestBuilder());
      }
      if (isValidValue(fields()[10], other.SourceDevice)) {
        this.SourceDevice = data().deepCopy(fields()[10].schema(), other.SourceDevice);
        fieldSetFlags()[10] = true;
      }
      if (other.hasSourceDeviceBuilder()) {
        this.SourceDeviceBuilder = com.mastercard.fcspr.types.SourceDevice.SourceDevice.newBuilder(other.getSourceDeviceBuilder());
      }
      if (isValidValue(fields()[11], other.Type)) {
        this.Type = data().deepCopy(fields()[11].schema(), other.Type);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Value)) {
        this.Value = data().deepCopy(fields()[12].schema(), other.Value);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Ref)) {
        this.Ref = data().deepCopy(fields()[13].schema(), other.Ref);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Currency)) {
        this.Currency = data().deepCopy(fields()[14].schema(), other.Currency);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Service)) {
        this.Service = data().deepCopy(fields()[15].schema(), other.Service);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Success)) {
        this.Success = data().deepCopy(fields()[16].schema(), other.Success);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Redirection)) {
        this.Redirection = data().deepCopy(fields()[17].schema(), other.Redirection);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Category)) {
        this.Category = data().deepCopy(fields()[18].schema(), other.Category);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.E2eRef)) {
        this.E2eRef = data().deepCopy(fields()[19].schema(), other.E2eRef);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.SourceBatchID)) {
        this.SourceBatchID = data().deepCopy(fields()[20].schema(), other.SourceBatchID);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DestinationBatchID)) {
        this.DestinationBatchID = data().deepCopy(fields()[21].schema(), other.DestinationBatchID);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.Auth)) {
        this.Auth = data().deepCopy(fields()[22].schema(), other.Auth);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ThirdParty)) {
        this.ThirdParty = data().deepCopy(fields()[23].schema(), other.ThirdParty);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.Settlement)) {
        this.Settlement = data().deepCopy(fields()[24].schema(), other.Settlement);
        fieldSetFlags()[24] = true;
      }
      if (other.hasSettlementBuilder()) {
        this.SettlementBuilder = com.mastercard.fcspr.types.Settlement.Settlement.newBuilder(other.getSettlementBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Transaction instance
     * @param other The existing instance to copy.
     */
    private Builder(com.mastercard.fcspr.types.Transaction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.TimeSent)) {
        this.TimeSent = data().deepCopy(fields()[1].schema(), other.TimeSent);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.TimeMessageSent)) {
        this.TimeMessageSent = data().deepCopy(fields()[2].schema(), other.TimeMessageSent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.TimeSwitchReceived)) {
        this.TimeSwitchReceived = data().deepCopy(fields()[4].schema(), other.TimeSwitchReceived);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.TimeSwitchSent)) {
        this.TimeSwitchSent = data().deepCopy(fields()[5].schema(), other.TimeSwitchSent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.TimeConfirmationReceived)) {
        this.TimeConfirmationReceived = data().deepCopy(fields()[6].schema(), other.TimeConfirmationReceived);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.TimeConfirmationSent)) {
        this.TimeConfirmationSent = data().deepCopy(fields()[7].schema(), other.TimeConfirmationSent);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Source)) {
        this.Source = data().deepCopy(fields()[8].schema(), other.Source);
        fieldSetFlags()[8] = true;
      }
      this.SourceBuilder = null;
      if (isValidValue(fields()[9], other.Dest)) {
        this.Dest = data().deepCopy(fields()[9].schema(), other.Dest);
        fieldSetFlags()[9] = true;
      }
      this.DestBuilder = null;
      if (isValidValue(fields()[10], other.SourceDevice)) {
        this.SourceDevice = data().deepCopy(fields()[10].schema(), other.SourceDevice);
        fieldSetFlags()[10] = true;
      }
      this.SourceDeviceBuilder = null;
      if (isValidValue(fields()[11], other.Type)) {
        this.Type = data().deepCopy(fields()[11].schema(), other.Type);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Value)) {
        this.Value = data().deepCopy(fields()[12].schema(), other.Value);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Ref)) {
        this.Ref = data().deepCopy(fields()[13].schema(), other.Ref);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Currency)) {
        this.Currency = data().deepCopy(fields()[14].schema(), other.Currency);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Service)) {
        this.Service = data().deepCopy(fields()[15].schema(), other.Service);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Success)) {
        this.Success = data().deepCopy(fields()[16].schema(), other.Success);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Redirection)) {
        this.Redirection = data().deepCopy(fields()[17].schema(), other.Redirection);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Category)) {
        this.Category = data().deepCopy(fields()[18].schema(), other.Category);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.E2eRef)) {
        this.E2eRef = data().deepCopy(fields()[19].schema(), other.E2eRef);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.SourceBatchID)) {
        this.SourceBatchID = data().deepCopy(fields()[20].schema(), other.SourceBatchID);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DestinationBatchID)) {
        this.DestinationBatchID = data().deepCopy(fields()[21].schema(), other.DestinationBatchID);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.Auth)) {
        this.Auth = data().deepCopy(fields()[22].schema(), other.Auth);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ThirdParty)) {
        this.ThirdParty = data().deepCopy(fields()[23].schema(), other.ThirdParty);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.Settlement)) {
        this.Settlement = data().deepCopy(fields()[24].schema(), other.Settlement);
        fieldSetFlags()[24] = true;
      }
      this.SettlementBuilder = null;
    }

    /**
      * Gets the value of the 'Id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return Id;
    }

    /**
      * Sets the value of the 'Id' field.
      * @param value The value of 'Id'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Id' field has been set.
      * @return True if the 'Id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Id' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearId() {
      Id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeSent' field.
      * @return The value.
      */
    public java.lang.Long getTimeSent() {
      return TimeSent;
    }

    /**
      * Sets the value of the 'TimeSent' field.
      * @param value The value of 'TimeSent'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeSent(long value) {
      validate(fields()[1], value);
      this.TimeSent = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeSent' field has been set.
      * @return True if the 'TimeSent' field has been set, false otherwise.
      */
    public boolean hasTimeSent() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'TimeSent' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeSent() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeMessageSent' field.
      * @return The value.
      */
    public java.lang.Long getTimeMessageSent() {
      return TimeMessageSent;
    }

    /**
      * Sets the value of the 'TimeMessageSent' field.
      * @param value The value of 'TimeMessageSent'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeMessageSent(long value) {
      validate(fields()[2], value);
      this.TimeMessageSent = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeMessageSent' field has been set.
      * @return True if the 'TimeMessageSent' field has been set, false otherwise.
      */
    public boolean hasTimeMessageSent() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'TimeMessageSent' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeMessageSent() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Time' field.
      * @return The value.
      */
    public java.lang.Long getTime() {
      return Time;
    }

    /**
      * Sets the value of the 'Time' field.
      * @param value The value of 'Time'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTime(long value) {
      validate(fields()[3], value);
      this.Time = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Time' field has been set.
      * @return True if the 'Time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Time' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeSwitchReceived' field.
      * @return The value.
      */
    public java.lang.Long getTimeSwitchReceived() {
      return TimeSwitchReceived;
    }

    /**
      * Sets the value of the 'TimeSwitchReceived' field.
      * @param value The value of 'TimeSwitchReceived'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeSwitchReceived(long value) {
      validate(fields()[4], value);
      this.TimeSwitchReceived = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeSwitchReceived' field has been set.
      * @return True if the 'TimeSwitchReceived' field has been set, false otherwise.
      */
    public boolean hasTimeSwitchReceived() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'TimeSwitchReceived' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeSwitchReceived() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeSwitchSent' field.
      * @return The value.
      */
    public java.lang.Long getTimeSwitchSent() {
      return TimeSwitchSent;
    }

    /**
      * Sets the value of the 'TimeSwitchSent' field.
      * @param value The value of 'TimeSwitchSent'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeSwitchSent(long value) {
      validate(fields()[5], value);
      this.TimeSwitchSent = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeSwitchSent' field has been set.
      * @return True if the 'TimeSwitchSent' field has been set, false otherwise.
      */
    public boolean hasTimeSwitchSent() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'TimeSwitchSent' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeSwitchSent() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeConfirmationReceived' field.
      * @return The value.
      */
    public java.lang.Long getTimeConfirmationReceived() {
      return TimeConfirmationReceived;
    }

    /**
      * Sets the value of the 'TimeConfirmationReceived' field.
      * @param value The value of 'TimeConfirmationReceived'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeConfirmationReceived(long value) {
      validate(fields()[6], value);
      this.TimeConfirmationReceived = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeConfirmationReceived' field has been set.
      * @return True if the 'TimeConfirmationReceived' field has been set, false otherwise.
      */
    public boolean hasTimeConfirmationReceived() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'TimeConfirmationReceived' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeConfirmationReceived() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeConfirmationSent' field.
      * @return The value.
      */
    public java.lang.Long getTimeConfirmationSent() {
      return TimeConfirmationSent;
    }

    /**
      * Sets the value of the 'TimeConfirmationSent' field.
      * @param value The value of 'TimeConfirmationSent'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setTimeConfirmationSent(long value) {
      validate(fields()[7], value);
      this.TimeConfirmationSent = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeConfirmationSent' field has been set.
      * @return True if the 'TimeConfirmationSent' field has been set, false otherwise.
      */
    public boolean hasTimeConfirmationSent() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'TimeConfirmationSent' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearTimeConfirmationSent() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Source' field.
      * @return The value.
      */
    public com.mastercard.fcspr.types.Source.Source getSource() {
      return Source;
    }

    /**
      * Sets the value of the 'Source' field.
      * @param value The value of 'Source'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setSource(com.mastercard.fcspr.types.Source.Source value) {
      validate(fields()[8], value);
      this.SourceBuilder = null;
      this.Source = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Source' field has been set.
      * @return True if the 'Source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'Source' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Source.Source.Builder getSourceBuilder() {
      if (SourceBuilder == null) {
        if (hasSource()) {
          setSourceBuilder(com.mastercard.fcspr.types.Source.Source.newBuilder(Source));
        } else {
          setSourceBuilder(com.mastercard.fcspr.types.Source.Source.newBuilder());
        }
      }
      return SourceBuilder;
    }

    /**
     * Sets the Builder instance for the 'Source' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Transaction.Builder setSourceBuilder(com.mastercard.fcspr.types.Source.Source.Builder value) {
      clearSource();
      SourceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Source' field has an active Builder instance
     * @return True if the 'Source' field has an active Builder instance
     */
    public boolean hasSourceBuilder() {
      return SourceBuilder != null;
    }

    /**
      * Clears the value of the 'Source' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearSource() {
      Source = null;
      SourceBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'Dest' field.
      * @return The value.
      */
    public com.mastercard.fcspr.types.Dest.Dest getDest() {
      return Dest;
    }

    /**
      * Sets the value of the 'Dest' field.
      * @param value The value of 'Dest'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setDest(com.mastercard.fcspr.types.Dest.Dest value) {
      validate(fields()[9], value);
      this.DestBuilder = null;
      this.Dest = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'Dest' field has been set.
      * @return True if the 'Dest' field has been set, false otherwise.
      */
    public boolean hasDest() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'Dest' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Dest.Dest.Builder getDestBuilder() {
      if (DestBuilder == null) {
        if (hasDest()) {
          setDestBuilder(com.mastercard.fcspr.types.Dest.Dest.newBuilder(Dest));
        } else {
          setDestBuilder(com.mastercard.fcspr.types.Dest.Dest.newBuilder());
        }
      }
      return DestBuilder;
    }

    /**
     * Sets the Builder instance for the 'Dest' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Transaction.Builder setDestBuilder(com.mastercard.fcspr.types.Dest.Dest.Builder value) {
      clearDest();
      DestBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Dest' field has an active Builder instance
     * @return True if the 'Dest' field has an active Builder instance
     */
    public boolean hasDestBuilder() {
      return DestBuilder != null;
    }

    /**
      * Clears the value of the 'Dest' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearDest() {
      Dest = null;
      DestBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'SourceDevice' field.
      * @return The value.
      */
    public com.mastercard.fcspr.types.SourceDevice.SourceDevice getSourceDevice() {
      return SourceDevice;
    }

    /**
      * Sets the value of the 'SourceDevice' field.
      * @param value The value of 'SourceDevice'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setSourceDevice(com.mastercard.fcspr.types.SourceDevice.SourceDevice value) {
      validate(fields()[10], value);
      this.SourceDeviceBuilder = null;
      this.SourceDevice = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'SourceDevice' field has been set.
      * @return True if the 'SourceDevice' field has been set, false otherwise.
      */
    public boolean hasSourceDevice() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'SourceDevice' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.SourceDevice.SourceDevice.Builder getSourceDeviceBuilder() {
      if (SourceDeviceBuilder == null) {
        if (hasSourceDevice()) {
          setSourceDeviceBuilder(com.mastercard.fcspr.types.SourceDevice.SourceDevice.newBuilder(SourceDevice));
        } else {
          setSourceDeviceBuilder(com.mastercard.fcspr.types.SourceDevice.SourceDevice.newBuilder());
        }
      }
      return SourceDeviceBuilder;
    }

    /**
     * Sets the Builder instance for the 'SourceDevice' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Transaction.Builder setSourceDeviceBuilder(com.mastercard.fcspr.types.SourceDevice.SourceDevice.Builder value) {
      clearSourceDevice();
      SourceDeviceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'SourceDevice' field has an active Builder instance
     * @return True if the 'SourceDevice' field has an active Builder instance
     */
    public boolean hasSourceDeviceBuilder() {
      return SourceDeviceBuilder != null;
    }

    /**
      * Clears the value of the 'SourceDevice' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearSourceDevice() {
      SourceDevice = null;
      SourceDeviceBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'Type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return Type;
    }

    /**
      * Sets the value of the 'Type' field.
      * @param value The value of 'Type'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setType(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.Type = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'Type' field has been set.
      * @return True if the 'Type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'Type' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearType() {
      Type = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Value' field.
      * @return The value.
      */
    public java.lang.Long getValue() {
      return Value;
    }

    /**
      * Sets the value of the 'Value' field.
      * @param value The value of 'Value'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setValue(long value) {
      validate(fields()[12], value);
      this.Value = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Value' field has been set.
      * @return True if the 'Value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Value' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearValue() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'Ref' field.
      * @return The value.
      */
    public java.lang.CharSequence getRef() {
      return Ref;
    }

    /**
      * Sets the value of the 'Ref' field.
      * @param value The value of 'Ref'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setRef(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.Ref = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'Ref' field has been set.
      * @return True if the 'Ref' field has been set, false otherwise.
      */
    public boolean hasRef() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'Ref' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearRef() {
      Ref = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Currency' field.
      * @return The value.
      */
    public java.lang.CharSequence getCurrency() {
      return Currency;
    }

    /**
      * Sets the value of the 'Currency' field.
      * @param value The value of 'Currency'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setCurrency(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.Currency = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Currency' field has been set.
      * @return True if the 'Currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Currency' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearCurrency() {
      Currency = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'Service' field.
      * @return The value.
      */
    public java.lang.CharSequence getService() {
      return Service;
    }

    /**
      * Sets the value of the 'Service' field.
      * @param value The value of 'Service'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setService(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.Service = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'Service' field has been set.
      * @return True if the 'Service' field has been set, false otherwise.
      */
    public boolean hasService() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'Service' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearService() {
      Service = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'Success' field.
      * @return The value.
      */
    public java.lang.Boolean getSuccess() {
      return Success;
    }

    /**
      * Sets the value of the 'Success' field.
      * @param value The value of 'Success'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setSuccess(boolean value) {
      validate(fields()[16], value);
      this.Success = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'Success' field has been set.
      * @return True if the 'Success' field has been set, false otherwise.
      */
    public boolean hasSuccess() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'Success' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearSuccess() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'Redirection' field.
      * @return The value.
      */
    public java.lang.Boolean getRedirection() {
      return Redirection;
    }

    /**
      * Sets the value of the 'Redirection' field.
      * @param value The value of 'Redirection'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setRedirection(boolean value) {
      validate(fields()[17], value);
      this.Redirection = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'Redirection' field has been set.
      * @return True if the 'Redirection' field has been set, false otherwise.
      */
    public boolean hasRedirection() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'Redirection' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearRedirection() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'Category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return Category;
    }

    /**
      * Sets the value of the 'Category' field.
      * @param value The value of 'Category'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.Category = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'Category' field has been set.
      * @return True if the 'Category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'Category' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearCategory() {
      Category = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'E2eRef' field.
      * @return The value.
      */
    public java.lang.CharSequence getE2eRef() {
      return E2eRef;
    }

    /**
      * Sets the value of the 'E2eRef' field.
      * @param value The value of 'E2eRef'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setE2eRef(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.E2eRef = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'E2eRef' field has been set.
      * @return True if the 'E2eRef' field has been set, false otherwise.
      */
    public boolean hasE2eRef() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'E2eRef' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearE2eRef() {
      E2eRef = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'SourceBatchID' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceBatchID() {
      return SourceBatchID;
    }

    /**
      * Sets the value of the 'SourceBatchID' field.
      * @param value The value of 'SourceBatchID'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setSourceBatchID(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.SourceBatchID = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'SourceBatchID' field has been set.
      * @return True if the 'SourceBatchID' field has been set, false otherwise.
      */
    public boolean hasSourceBatchID() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'SourceBatchID' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearSourceBatchID() {
      SourceBatchID = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'DestinationBatchID' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinationBatchID() {
      return DestinationBatchID;
    }

    /**
      * Sets the value of the 'DestinationBatchID' field.
      * @param value The value of 'DestinationBatchID'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setDestinationBatchID(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.DestinationBatchID = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'DestinationBatchID' field has been set.
      * @return True if the 'DestinationBatchID' field has been set, false otherwise.
      */
    public boolean hasDestinationBatchID() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'DestinationBatchID' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearDestinationBatchID() {
      DestinationBatchID = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'Auth' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuth() {
      return Auth;
    }

    /**
      * Sets the value of the 'Auth' field.
      * @param value The value of 'Auth'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setAuth(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.Auth = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'Auth' field has been set.
      * @return True if the 'Auth' field has been set, false otherwise.
      */
    public boolean hasAuth() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'Auth' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearAuth() {
      Auth = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'ThirdParty' field.
      * @return The value.
      */
    public java.lang.Boolean getThirdParty() {
      return ThirdParty;
    }

    /**
      * Sets the value of the 'ThirdParty' field.
      * @param value The value of 'ThirdParty'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setThirdParty(boolean value) {
      validate(fields()[23], value);
      this.ThirdParty = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'ThirdParty' field has been set.
      * @return True if the 'ThirdParty' field has been set, false otherwise.
      */
    public boolean hasThirdParty() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'ThirdParty' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearThirdParty() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'Settlement' field.
      * @return The value.
      */
    public com.mastercard.fcspr.types.Settlement.Settlement getSettlement() {
      return Settlement;
    }

    /**
      * Sets the value of the 'Settlement' field.
      * @param value The value of 'Settlement'.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder setSettlement(com.mastercard.fcspr.types.Settlement.Settlement value) {
      validate(fields()[24], value);
      this.SettlementBuilder = null;
      this.Settlement = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'Settlement' field has been set.
      * @return True if the 'Settlement' field has been set, false otherwise.
      */
    public boolean hasSettlement() {
      return fieldSetFlags()[24];
    }

    /**
     * Gets the Builder instance for the 'Settlement' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Settlement.Settlement.Builder getSettlementBuilder() {
      if (SettlementBuilder == null) {
        if (hasSettlement()) {
          setSettlementBuilder(com.mastercard.fcspr.types.Settlement.Settlement.newBuilder(Settlement));
        } else {
          setSettlementBuilder(com.mastercard.fcspr.types.Settlement.Settlement.newBuilder());
        }
      }
      return SettlementBuilder;
    }

    /**
     * Sets the Builder instance for the 'Settlement' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.mastercard.fcspr.types.Transaction.Builder setSettlementBuilder(com.mastercard.fcspr.types.Settlement.Settlement.Builder value) {
      clearSettlement();
      SettlementBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Settlement' field has an active Builder instance
     * @return True if the 'Settlement' field has an active Builder instance
     */
    public boolean hasSettlementBuilder() {
      return SettlementBuilder != null;
    }

    /**
      * Clears the value of the 'Settlement' field.
      * @return This builder.
      */
    public com.mastercard.fcspr.types.Transaction.Builder clearSettlement() {
      Settlement = null;
      SettlementBuilder = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    @Override
    public Transaction build() {
      try {
        Transaction record = new Transaction();
        record.Id = fieldSetFlags()[0] ? this.Id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.TimeSent = fieldSetFlags()[1] ? this.TimeSent : (java.lang.Long) defaultValue(fields()[1]);
        record.TimeMessageSent = fieldSetFlags()[2] ? this.TimeMessageSent : (java.lang.Long) defaultValue(fields()[2]);
        record.Time = fieldSetFlags()[3] ? this.Time : (java.lang.Long) defaultValue(fields()[3]);
        record.TimeSwitchReceived = fieldSetFlags()[4] ? this.TimeSwitchReceived : (java.lang.Long) defaultValue(fields()[4]);
        record.TimeSwitchSent = fieldSetFlags()[5] ? this.TimeSwitchSent : (java.lang.Long) defaultValue(fields()[5]);
        record.TimeConfirmationReceived = fieldSetFlags()[6] ? this.TimeConfirmationReceived : (java.lang.Long) defaultValue(fields()[6]);
        record.TimeConfirmationSent = fieldSetFlags()[7] ? this.TimeConfirmationSent : (java.lang.Long) defaultValue(fields()[7]);
        if (SourceBuilder != null) {
          record.Source = this.SourceBuilder.build();
        } else {
          record.Source = fieldSetFlags()[8] ? this.Source : (com.mastercard.fcspr.types.Source.Source) defaultValue(fields()[8]);
        }
        if (DestBuilder != null) {
          record.Dest = this.DestBuilder.build();
        } else {
          record.Dest = fieldSetFlags()[9] ? this.Dest : (com.mastercard.fcspr.types.Dest.Dest) defaultValue(fields()[9]);
        }
        if (SourceDeviceBuilder != null) {
          record.SourceDevice = this.SourceDeviceBuilder.build();
        } else {
          record.SourceDevice = fieldSetFlags()[10] ? this.SourceDevice : (com.mastercard.fcspr.types.SourceDevice.SourceDevice) defaultValue(fields()[10]);
        }
        record.Type = fieldSetFlags()[11] ? this.Type : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.Value = fieldSetFlags()[12] ? this.Value : (java.lang.Long) defaultValue(fields()[12]);
        record.Ref = fieldSetFlags()[13] ? this.Ref : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.Currency = fieldSetFlags()[14] ? this.Currency : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.Service = fieldSetFlags()[15] ? this.Service : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.Success = fieldSetFlags()[16] ? this.Success : (java.lang.Boolean) defaultValue(fields()[16]);
        record.Redirection = fieldSetFlags()[17] ? this.Redirection : (java.lang.Boolean) defaultValue(fields()[17]);
        record.Category = fieldSetFlags()[18] ? this.Category : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.E2eRef = fieldSetFlags()[19] ? this.E2eRef : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.SourceBatchID = fieldSetFlags()[20] ? this.SourceBatchID : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.DestinationBatchID = fieldSetFlags()[21] ? this.DestinationBatchID : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.Auth = fieldSetFlags()[22] ? this.Auth : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.ThirdParty = fieldSetFlags()[23] ? this.ThirdParty : (java.lang.Boolean) defaultValue(fields()[23]);
        if (SettlementBuilder != null) {
          record.Settlement = this.SettlementBuilder.build();
        } else {
          record.Settlement = fieldSetFlags()[24] ? this.Settlement : (com.mastercard.fcspr.types.Settlement.Settlement) defaultValue(fields()[24]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
